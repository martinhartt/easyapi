{"version":3,"sources":["webpack:///webpack/bootstrap 9a4babff0fc9b884feaa","webpack:///./src/models/index.js","webpack:///external \"express\"","webpack:///./src/config/passport.js","webpack:///external \"jsonwebtoken\"","webpack:///./src/index.js","webpack:///./src/config/bootstrap.js","webpack:///./src/config/connections.js","webpack:///./src/middleware/authentication.js","webpack:///./src/models/attribute.js","webpack:///./src/models/device.js","webpack:///./src/models/endpoint.js","webpack:///./src/models/entry.js","webpack:///./src/models/issue.js","webpack:///./src/models/model.js","webpack:///./src/models/service.js","webpack:///./src/models/user.js","webpack:///./src/models/value.js","webpack:///./src/routes/auth.js","webpack:///./src/routes/index.js","webpack:///./src/routes/service.js","webpack:///./src/services/natural.js","webpack:///./src/services/parse.js","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"fs\"","webpack:///external \"natural\"","webpack:///external \"nlp_compromise\"","webpack:///external \"passport\"","webpack:///external \"passport-local\"","webpack:///external \"path\"","webpack:///external \"pos\"","webpack:///external \"request-promise\"","webpack:///external \"sbd\"","webpack:///external \"sequelize\"","webpack:///external \"validator\""],"names":["basename","path","__filename","env","process","NODE_ENV","db","config","connections","sequelize","use_env_variable","database","username","password","models","attribute","device","endpoint","entry","issue","model","service","user","value","capitalizeString","str","charAt","toUpperCase","slice","modelName","hasOwnProperty","console","log","Object","keys","forEach","associate","Sequelize","User","passport","use","usernameField","passwordField","session","passReqToCallback","req","email","done","findOne","where","then","foundUser","validPassword","message","create","passwordHash","generateHash","payload","id","token","jwt","sign","catch","err","serializeUser","deserializeUser","find","bootstrap","app","Express","port","sync","bodyParser","json","initialize","res","next","Error","status","locals","error","get","render","listen","Promise","resolve","development","host","dialect","test","production","originalUrl","startsWith","headers","authorization","end","split","verify","decoded","userId","findById","DataTypes","Attribute","define","name","STRING","type","classMethods","belongsTo","Model","onDelete","foreignKey","allowNull","Device","isPublic","BOOLEAN","Endpoint","instructions","mode","Service","Entry","index","INTEGER","hasMany","Value","Issue","unique","bcrypt","hashSync","genSaltSync","instanceMethods","compare","router","Router","validate","form","errors","success","validator","isEmail","length","post","validation","param","authenticate","assign","send","findAll","include","users","text","parseNaturalLanguage","result","UserId","modelDefinitions","response","toJSON","modelDefinition","ServiceId","modelJSON","attributes","attributeByName","attributeDefinition","ModelId","push","entries","entriesDefinition","entryJSON","values","attributeString","AttributeId","EntryId","e","parseResult","parse","modelStructure","allEntities","sentenceResult","data","potentialRelationships","parse_list","filter","word","POS_fine","tokens","cleanTree","filterTree","parse_tree","m","treeIndex","cleanTreeIndex","obj","relationship","inTree","nounTree","compareDepth","a","b","depth","subject","o","arc","includes","sort","object","properties","getConjuctions","entities","propertiesWithTypes","property","categoriseProp","entity","existingEntity","s","lemma","concat","raw","postprocess","generateModelStructure","tokenizer","tagger","request","seperateSentences","join","JSON","condition","modifiers","child","found","decide","sum","Number","findIfPropertyIsRequired","prop","context","optionalKeywords","requiredKeywords","allRequiredInformation","monads","monad","k","findIfPropertyHasMultiple","determiners","adjModifiers","numModifiers","combined","allCardinalityInfo","modifier","singleKeywords","multipleKeywords","compromise","number","isContainment","containmentWords","w","propertyName","multiple","correctedNoun","noun","pluralize","singularize","compounds","map","c","presentVerb","verb","to_present","capitalizeWord","propertyType","toLowerCase","possibleTypes","dateKeywords","numberKeywords","hasMultiple","required","conjunction","deeperConjuctions","flatMap","array","lambda","Array","prototype","apply","tree","Natural","_find","_findAll","_findIfPropertyIsRequired","_findIfPropertyHasMultiple","_filterTree","parseSpreadsheet","spreadsheets","allModelDefinitions","csv","headingLine","rowLines","headings","rows","r","i","types","Set","row","determineType","reduce","prev","information","undefined","findType","string","safeJSONParse","isArray","example"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9a4babff0fc9b884feaa","import fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport connections from '../config/connections';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst db = {};\n\nconst config = connections[env];\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nimport attribute from './attribute';\nimport device from './device';\nimport endpoint from './endpoint';\nimport entry from './entry';\nimport issue from './issue';\nimport model from './model';\nimport service from './service';\nimport user from './user';\nimport value from './value';\n\nlet models = {\n  attribute,\n  device,\n  endpoint,\n  entry,\n  issue,\n  model,\n  service,\n  user,\n  value,\n}\n\nconst capitalizeString = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\nfor (const modelName in models) {\n  if (!models.hasOwnProperty(modelName)) continue;\n\n  db[capitalizeString(modelName)] = models[modelName](sequelize, Sequelize);\n}\n\nconsole.log(db);\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0","import passport from 'passport';\nimport { Strategy as LocalStrategy } from 'passport-local';\nimport models from '../models';\nimport jwt from 'jsonwebtoken';\n\nconst { User } = models;\n\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n  passwordField: 'password',\n  session: false,\n  passReqToCallback: true\n}, (req, email, password, done) => {\n    return User.findOne({\n      where: {\n        email,\n      }\n    })\n    .then(async foundUser => {\n      let user;\n      if (foundUser) {\n        // User exists\n        if (!(await foundUser.validPassword(password))) {\n          console.log('Invalid password')\n          return done(null, false, {\n            message: 'Incorrect password.',\n          });\n        }\n        user = foundUser;\n\n      } else {\n        // New user\n        user = await User.create({\n          email,\n          passwordHash: User.generateHash(password),\n        });\n      }\n\n      const payload = {\n        user: user.id,\n      }\n\n      const token = jwt.sign(payload, 'secret');\n\n      return done(null, {\n        user: {\n          email: user.email,\n        },\n        token,\n      });\n    })\n    .catch(err => {\n      return done(err);\n    });\n  }\n));\n\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  User.find({\n    where: { id },\n  }, function(err, [user]) {\n    done(err, user);\n  });\n});\n\nexport default passport;\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/passport.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 3\n// module chunks = 0","import Express from 'express';\nimport bodyParser from 'body-parser';\nimport passport from './config/passport';\nimport index from './routes/index';\nimport auth from './routes/auth';\nimport service from './routes/service';\nimport bootstrap from './config/bootstrap';\nimport models from './models';\nimport authentication from './middleware/authentication';\n\n\nbootstrap().then(async () => {\n  /* eslint-disable new-cap */\n  const app = Express();\n  const port = 9001;\n\n  await models.sequelize.sync();\n\n  app.use(bodyParser.json());\n\n  app.use(passport.initialize());\n  app.use(authentication);\n\n  app.use('/api', index);\n  app.use('/api/service', service);\n  app.use('/api/auth', auth);\n\n  // catch 404 and forward to error handler\n  app.use((req, res, next) => {\n    const err = new Error('Not Found!');\n    err.status = 404;\n    next(err);\n  });\n\n  // error handler\n  app.use((err, req, res) => {\n    // set locals, only providing error in development\n    /* eslint-disable no-param-reassign */\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.render('error');\n  });\n\n  app.listen(port);\n  console.log(`Server is running on port ${port}`);\n})\n.catch(err => console.error(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * Bootstrap: All scripts that should be executed before server starts running\n */\n\nexport default function bootstrap() {\n  return Promise.resolve();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/bootstrap.js","const connections = {\n  development: {\n    username: 'martinkubat',\n    password: '',\n    database: 'martinkubat',\n    host: 'localhost',\n    dialect: 'postgres',\n  },\n  test: {\n    username: 'root',\n    password: null,\n    database: 'database_test',\n    host: '127.0.0.1',\n    dialect: 'mysql',\n  },\n  production: {\n    username: 'root',\n    password: null,\n    database: 'database_production',\n    host: '127.0.0.1',\n    dialect: 'mysql',\n  },\n};\n\nexport default connections;\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/connections.js","import jwt from 'jsonwebtoken';\nimport models from '../models';\n\nconst { User } = models;\n\nexport default function(req, res, next) {\n  if (req.originalUrl.startsWith('/api/auth/')) {\n    return next();\n  }\n\n  if (!req.headers.authorization) {\n    return res.status(401).end();\n  }\n\n  const token = req.headers.authorization.split(' ')[1];\n  return jwt.verify(token, 'secret', (err, decoded) => {\n    if (err) return res.status(401).end();\n\n    const userId = decoded.user;\n\n    return User.findById(userId)\n      .then(user => {\n        if (user) {\n          req.user = user;\n          return next();\n        }\n        return res.status(401).end();\n      })\n      .catch(err => res.status(401).end());\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/middleware/authentication.js","export default function (sequelize, DataTypes) {\n  const Attribute = sequelize.define('Attribute', {\n    name: DataTypes.STRING,\n    type: DataTypes.STRING,\n  }, {\n    classMethods: {\n      associate(models) {\n        Attribute.belongsTo(models.Model, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n      },\n    },\n  });\n\n  return Attribute;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/attribute.js","export default function (sequelize, DataTypes) {\n  const Device = sequelize.define('Device', {\n    name: DataTypes.STRING,\n    isPublic: DataTypes.BOOLEAN,\n  }, {\n    classMethods: {\n      associate(models) {\n        Device.belongsTo(models.User, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n      },\n    },\n  });\n\n  return Device;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/device.js","export default function (sequelize, DataTypes) {\n  const Endpoint = sequelize.define('Endpoint', {\n    instructions: DataTypes.STRING,\n    mode: DataTypes.STRING,\n    path: DataTypes.STRING,\n  }, {\n    classMethods: {\n      associate(models) {\n        Endpoint.belongsTo(models.Service, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n      },\n    },\n  });\n\n  return Endpoint;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/endpoint.js","export default function (sequelize, DataTypes) {\n  const Entry = sequelize.define('Entry', {\n    index: DataTypes.INTEGER,\n  }, {\n    classMethods: {\n      associate(models) {\n        Entry.belongsTo(models.Model, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n        Entry.hasMany(models.Value);\n      },\n    },\n  });\n\n  return Entry;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/entry.js","export default function (sequelize, DataTypes) {\n  const Issue = sequelize.define('Issue', {\n    name: DataTypes.STRING,\n    isPublic: DataTypes.BOOLEAN,\n  }, {\n    classMethods: {\n      associate(models) {\n        Issue.belongsTo(models.User, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n      },\n    },\n  });\n\n  return Issue;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/issue.js","export default function (sequelize, DataTypes) {\n  const Model = sequelize.define('Model', {\n    name: DataTypes.STRING,\n  }, {\n    classMethods: {\n      associate(models) {\n        Model.belongsTo(models.Service, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n        Model.hasMany(models.Attribute);\n        Model.hasMany(models.Entry);\n      },\n    },\n  });\n\n  return Model;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/model.js","export default function (sequelize, DataTypes) {\n  const Service = sequelize.define('Service', {\n    name: DataTypes.STRING,\n    isPublic: DataTypes.BOOLEAN,\n  }, {\n    classMethods: {\n      associate(models) {\n        Service.belongsTo(models.User, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n        Service.hasMany(models.Endpoint);\n        Service.hasMany(models.Model);\n      },\n    },\n  });\n\n  return Service;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/service.js","import bcrypt from 'bcrypt';\n\nexport default function (sequelize, DataTypes) {\n  const User = sequelize.define('User', {\n    email: {\n      type: DataTypes.STRING,\n      unique: true,\n    },\n    passwordHash: DataTypes.STRING,\n  }, {\n    classMethods: {\n      associate(models) {\n        User.hasMany(models.Service);\n      },\n      generateHash: password => bcrypt.hashSync(password, bcrypt.genSaltSync(8), null),\n    },\n    instanceMethods: {\n      generateHash: password => bcrypt.hashSync(password, bcrypt.genSaltSync(8), null),\n      validPassword: function(password) {\n        console.log(password,this.passwordHash);\n        return bcrypt.compare(password, this.passwordHash);\n      },\n    }\n  });\n\n  return User;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.js","export default function (sequelize, DataTypes) {\n  const Value = sequelize.define('Value', {\n    value: DataTypes.STRING,\n  }, {\n    classMethods: {\n      associate(models) {\n        Value.belongsTo(models.Entry, {\n          onDelete: 'CASCADE',\n          foreignKey: {\n            allowNull: false,\n          },\n        });\n        Value.belongsTo(models.Attribute);\n      },\n    },\n  });\n\n  return Value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/value.js","import { Router } from 'express';\nimport passport from '../config/passport';\nimport validator from 'validator';\n\n/* eslint-disable new-cap */\nconst router = Router();\n\nfunction validate(form) {\n  const errors = {};\n  let success = true;\n\n  if (!form || !form.email || !validator.isEmail(form.email)) {\n    success = false;\n    errors.email = 'This is not a valid email.'\n  }\n\n  if (!form || !form.password || form.password.length < 5) {\n    success = false\n    errors.password = 'This password is too short.';\n  }\n\n  return {\n    success,\n    errors,\n  }\n}\n\n/* GET index. */\nrouter.post('/login', (req, res, next) => {\n  const validation = validate({\n    email: req.param('email'),\n    password: req.param('password'),\n  });\n\n  if (!validation.success) {\n    return res.status(400).json({\n      success: false,\n      errors: validation.errors,\n    })\n  }\n\n  return passport.authenticate('local', (err, user) => {\n    console.log(err, user);\n    if (err || !user) {\n      return res.status(400).json({\n        success: false,\n        message: 'Incorrect details',\n      });\n    }\n\n    return res.status(200).json(Object.assign({\n      success: true,\n      errors: {},\n    }, user));\n  })(req, res, next);\n\n});\n\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/auth.js","import { Router } from 'express';\nimport { User, Service } from '../models';\n\n/* eslint-disable new-cap */\nconst router = Router();\n\n/* GET index. */\nrouter.get('/', (req, res) => {\n  res.send('Hello ok yep!');\n});\n\nrouter.get('/models', (req, res) => {\n  User.findAll({\n    include: [Service],\n  }).then((users) => {\n    res.send(users);\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/index.js","import { Router } from 'express';\nimport models from '../models';\nimport { parseSpreadsheet, parseNaturalLanguage } from '../services/parse';\n\nconst { Service, Model, Attribute, Entry, Value } = models;\n\n/* eslint-disable new-cap */\nconst router = Router();\n\nrouter.post('/parseText', (req, res) => {\n  const text = req.param('text');\n  return parseNaturalLanguage(text)\n  .then(result => res.send(result));\n});\n\nrouter.post('/parseSpreadsheet', (req, res) => {\n  const text = req.param('text');\n  return parseNaturalLanguage(text);\n});\n\n/* POST scratch. */\nrouter.post('/', async (req, res) => {\n  const name = req.param('name');\n\n  console.log('name');\n  let service = await Service.create({\n    name,\n    isPublic: false,\n    UserId: req.user.id,\n  });\n\n  const modelDefinitions = req.param('models');\n  const models = [];\n\n  let response = {\n    service: service.toJSON(),\n    success: true,\n  };\n\n  // TODO Validation\n\n  try {\n    for (const modelDefinition of modelDefinitions) {\n      const model = await Model.create({\n        name: modelDefinition.name,\n        ServiceId: service.id,\n      });\n\n      let modelJSON = model.toJSON();\n      const attributes = [];\n      const attributeByName = {};\n\n      for (const attributeDefinition of modelDefinition.attributes) {\n        const attribute = await Attribute.create({\n          name: attributeDefinition.name,\n          type: attributeDefinition.type,\n          ModelId: model.id,\n        });\n\n        attributeByName[attributeDefinition.name] = attribute;\n        attributes.push(attribute.toJSON());\n      }\n\n      modelJSON.attributes = attributes;\n\n      let entries = [];\n\n      let index = 1;\n      for (const entriesDefinition of modelDefinition.entries) {\n        const entry = await Entry.create({\n          index,\n          ModelId: model.id,\n        });\n        index++;\n\n        let entryJSON = entry.toJSON()\n        let values = [];\n\n        for (const attributeString of Object.keys(entriesDefinition)) {\n          if (!attributeByName[attributeString]) {\n            return res.status(400).json({\n              error: `Please only specify attributes which are defined in the model (${attributeString}).`,\n              success: false,\n            })\n          }\n          const value = await Value.create({\n            AttributeId: attributeByName[attributeString].id,\n            value: entriesDefinition[attributeString],\n            EntryId: entry.id,\n          });\n\n          values.push(value.toJSON());\n        }\n\n        entryJSON.values = values;\n        entries.push(entryJSON);\n      }\n\n      modelJSON.entries = entries;\n      models.push(modelJSON);\n    }\n\n  } catch (e) {\n    return res.status(501).json({\n      error: e,\n      success: false,\n    })\n  }\n\n  response.service.models = models;\n\n  res.json(service);\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/service.js","import request from 'request-promise';\nimport compromise from 'nlp_compromise';\n\n/**\n * Natural Service: A service for extracting information from natural speech.\n */\nimport { sentences as seperateSentences } from 'sbd';\nimport { WordTokenizer } from 'natural';\nimport { Tagger } from 'pos';\n\nconst tokenizer = new WordTokenizer();\nconst tagger = new Tagger();\n\n// Uses spacy to deconstruct text into a dependancy parse tree\nfunction parse(text) {\n\n  return request.post('http://localhost:5000/parse', {\n    form: {\n      text: seperateSentences(text).join('<#SENT_SEPERATOR#>'),\n    },\n  })\n  .then(res => JSON.parse(res));\n}\n\n// In the dependency parse tree it finds first object which satisfies the condition\nfunction find(object, condition) {\n  if (condition(object)) return object;\n\n  if (!object || !object.modifiers || object.modifiers.length === 0) return null;\n  for (const child of object.modifiers) {\n    const result = find(child, condition);\n    if (result) return result;\n  }\n  return null;\n}\n\n// In the dependency parse tree it finds all objects which satisfy the condition\nfunction findAll(object, condition) {\n  let found = [];\n  if (condition(object)) found.push(object);\n\n  if (!object || !object.modifiers || object.modifiers.length === 0) return found;\n\n  for (const child of object.modifiers) {\n    const result = findAll(child, condition);\n    if (result.length) found = [...result, ...found];\n  }\n  return found;\n}\n\n// From an array of booleans decide the final value\nfunction decide(values) {\n  if (values.length === 0) return null;\n\n  let sum = 0;\n  for (const value of values) {\n    sum += Number(value);\n  }\n  return sum / values.length >= 0.5;\n}\n\n// Finds the existance of property. Returns string of 'required', 'optional', 'unknown'\nfunction findIfPropertyIsRequired(prop, context) {\n  //  https://en.wikipedia.org/wiki/Auxiliary_verb\n  const optionalKeywords = ['may', 'might', 'could', 'should', 'maybe', 'possible', 'possibly', 'optionally', 'optional', 'ought'];\n  const requiredKeywords = ['must', 'needs', 'need', 'shall', 'will'];\n\n  const allRequiredInformation = [];\n\n  // Find if the relationship has monads attached\n  if (!context.modifiers || !context.modifiers.length) return false;\n  const monads = context.modifiers.filter(o => o.arc === 'aux');\n\n  for (const monad of monads) {\n    if (optionalKeywords.find(k => k === monad.lemma)) {\n      allRequiredInformation.push(false);\n    } else if (requiredKeywords.find(k => k === monad.lemma)) {\n      allRequiredInformation.push(true);\n    }\n  }\n\n  return decide(allRequiredInformation) || false;\n}\n\n// Finds if a property has multiple instances\nfunction findIfPropertyHasMultiple(prop) {\n  const determiners = prop.modifiers ? prop.modifiers.filter(o => o.arc === 'det') : [];\n  const adjModifiers = prop.modifiers ? prop.modifiers.filter(o => o.arc === 'amod') : [];\n  const numModifiers = prop.modifiers ? prop.modifiers.filter(o => o.arc === 'nummod') : [];\n\n  const combined = determiners.concat(adjModifiers).concat(numModifiers);\n  // console.log(prop.lemma, ' findupper ', combined);\n\n  // If the noun is plural then it will be multiple\n  if (prop.POS_fine === 'NNS') {\n    return true;\n  }\n\n  if (combined.length === 0) return false;\n\n  // Find all information related to upper bound\n  const allCardinalityInfo = [];\n  for (const modifier of combined) {\n    const singleKeywords = ['a', 'single', 'one'];\n    const multipleKeywords = ['many', 'multiple', 'several'];\n    // const singleNumbers = ['one', 'zero'];\n\n    if (modifier.arc === 'nummod') {\n      // Parse value of number\n      allCardinalityInfo.push(compromise.value(modifier.lemma).number > 1)\n    }\n\n    if (singleKeywords.find(k => k === modifier.lemma)) {\n      allCardinalityInfo.push(false);\n    } else if (multipleKeywords.find(k => k === modifier.lemma)) {\n      allCardinalityInfo.push(true);\n    }\n  }\n\n  return decide(allCardinalityInfo) || false;\n}\n\nfunction isContainment(relationship) {\n  const containmentWords = [\n    'have',\n    'include',\n    'incorporate',\n    'consist',\n    'comprise',\n    'contain',\n  ];\n\n  return containmentWords.find(w => w == relationship.lemma);\n}\n\nfunction propertyName(prop, relationship, multiple) {\n  let entity = '';\n\n\n  const correctedNoun = multiple ?\n    compromise.noun(prop.lemma).pluralize() :\n    compromise.noun(prop.lemma).singularize();\n\n  const compounds = findAll(prop, m => m.arc === 'compound');\n\n  if (compounds.length) {\n    entity = `${compounds.map(c => c.lemma).join('_')}_${correctedNoun}`;\n  } else {\n    entity = correctedNoun;\n  }\n\n  if (isContainment(relationship)) {\n    return entity;\n  }\n\n  const presentVerb = compromise.verb(relationship.word).to_present();\n\n  return `${presentVerb}_${entity}`;\n}\n\nconst capitalizeWord = str => str.charAt(0).toUpperCase() + str.slice(1);\n\nfunction propertyType(prop, entities = []) {\n  for (const entity of entities) {\n    if (entity.raw.toLowerCase() === prop.raw.toLowerCase() ||\n        entity.lemma.toLowerCase() === prop.lemma.toLowerCase()) {\n      return capitalizeWord(entity.lemma);\n    }\n  }\n\n  const possibleTypes = [];\n\n  // Check criteria for date.\n  const dateKeywords = [\n    'date',\n    'day', // TODO Add more keywords\n  ]\n\n  // Check criteria for number.\n  const numberKeywords = [\n    'number',\n    'integer',\n    'float',\n    'double',\n    ''\n  ]\n\n  // Check for integer or float\n\n  return 'string';\n}\n\nfunction categoriseProp(prop, context, relationship, entities) {\n  const hasMultiple = findIfPropertyHasMultiple(prop);\n  return {\n    type: propertyType(prop, entities),\n    name: propertyName(prop, relationship, hasMultiple),\n    raw: prop.word,\n    lemma: prop.lemma,\n    required: findIfPropertyIsRequired(prop, context),\n    multiple: hasMultiple,\n  };\n}\n\nfunction getConjuctions(object) {\n  if (!object || !object.modifiers || object.modifiers.length === 0) return [];\n\n  const [conjunction] = object.modifiers.filter(o => o.arc === 'conj');\n  const deeperConjuctions = getConjuctions(conjunction);\n\n  if (deeperConjuctions.length) {\n    return [\n      conjunction,\n      ...deeperConjuctions,\n    ];\n  }\n  if (conjunction) {\n    return [conjunction];\n  }\n  return [];\n}\n\nfunction postprocess(modelStructure, entities) {\n  for (const models of modelStructure) {\n    for (const prop of models.properties) {\n      prop.type = propertyType(prop, entities);\n    }\n  }\n}\n\nfunction flatMap(array, lambda) {\n  if (!array) return [];\n  return Array.prototype.concat.apply([], array.map(lambda));\n};\n\nfunction filterTree(tree, condition) {\n  if (!tree) return;\n\n  let modifiers = flatMap(tree.modifiers, m => filterTree(m, condition));\n\n  if (condition(tree)) {\n    if (modifiers.length < 1) {\n      delete tree.modifiers;\n      return tree;\n    }\n    return Object.assign(tree, {\n      modifiers,\n    });\n  } else {\n    return modifiers;\n  }\n}\n\nasync function generateModelStructure(text) {\n  // Annotate raw text with POS and get dependency structure\n  const parseResult = await parse(text);\n  const modelStructure = [];\n  let allEntities = [];\n\n  // Useful transformations\n  // Remove oxford comma!\n\n  for (const sentenceResult of parseResult.data) {\n    // Find potential entities\n    // const potentialEntities = sentenceResult.parse_list\n      // .filter(word => word.POS_coarse === 'NOUN');\n\n    // Find relationships\n    const potentialRelationships = sentenceResult.parse_list\n      .filter(word => word.POS_fine.startsWith('V'));\n\n    // Build up tree of words to their place in parse tree\n    const tokens = sentenceResult.parse_list;\n    const cleanTree = filterTree(sentenceResult.parse_tree[0], m => m.POS_fine.startsWith('V') || m.POS_fine.startsWith('N') || m.POS_fine === 'PRP');\n    console.log('cleanTree?', cleanTree)\n    const treeIndex = {};\n    const cleanTreeIndex = {};\n    tokens.forEach((token) => {\n      treeIndex[token.id] = find(sentenceResult.parse_tree[0], obj => obj.id === token.id);\n      cleanTreeIndex[token.id] = find(cleanTree, obj => obj.id === token.id);\n    });\n\n    // console.log(cleanTree, cleanTreeIndex)\n\n    for (const relationship of potentialRelationships) {\n      // First containment\n      let inTree = cleanTreeIndex[relationship.id];\n\n      let nounTree = filterTree(inTree, m => m.POS_fine.startsWith('N') || m.POS_fine === 'PRP')\n      const compareDepth = (a, b) => a.depth - b.depth;\n\n      if (!nounTree || nounTree.length < 1) continue;\n      // Find subject and object\n      console.log('\\n\\n\\nOK ',inTree, nounTree);\n      const [subject] = nounTree.filter(o => o.arc.includes('subj')).sort(compareDepth);\n      const [object] = nounTree.filter(o => o.arc.includes('obj')).sort(compareDepth);\n\n\n      console.log(subject, object);\n\n      let properties = [];\n      if (object) {\n        // This is the properties\n        properties = [object, ...getConjuctions(object)];\n      }\n      let entities = [];\n      if (subject) {\n        // This is entities\n        entities = [subject, ...getConjuctions(subject)];\n        allEntities = [...allEntities, ...entities];\n      }\n\n\n      inTree = treeIndex[relationship.id];\n\n      const propertiesWithTypes = [];\n      for (const property of properties) {\n        propertiesWithTypes.push(categoriseProp(property, inTree, relationship, entities));\n      }\n\n      for (const entity of entities) {\n        const existingEntity = modelStructure.find(s => s.name === entity.lemma);\n\n        if (existingEntity) {\n          existingEntity.properties = existingEntity.properties.concat(propertiesWithTypes);\n        } else {\n          modelStructure.push({\n            name: entity.lemma,\n            raw: entity.word,\n            properties: propertiesWithTypes,\n          });\n        }\n      }\n    }\n  }\n\n  postprocess(modelStructure, allEntities);\n  return modelStructure;\n\n  // return;\n  //\n  // // TODO Spellcheck\n  // const sentences = seperateSentences(text);\n  // // const structure = {};\n  // //\n  // for (const [, sentence] of sentences.entries()) {\n  //   tokenize(sentence);\n  // }\n  //\n  // // Find entities (nouns)\n  // const sentenceA = parse('A pet has a name, two breeds, multiple toys,\n  //  less than five friends, and many owners.');\n  // console.log(sentenceA);\n  // console.log(`Analysing \"${sentenceA.text}\"`);\n  // console.log('Finding entities');\n  // const potentialEntities = sentenceA.parse_list\n  //   .filter(word => word.POS_coarse === 'NOUN');\n  // console.log(potentialEntities);\n  //\n  // // Find relationships between entities (verbs) and properties of relationships\n  // console.log('Finding relationships');\n  // console.log('Finding verbs');\n  // const potentialRelationship = sentenceA.parse_list\n  //   .filter(word => word.POS_coarse === 'VERB');\n  // console.log(potentialRelationship);\n  //\n  // // Id each word\n  // function find(object: { modifiers: [any] }, condition: Function) {\n  //   if (condition(object)) return object;\n  //\n  //   if (!object.modifiers || object.modifiers.length === 0) return null;\n  //   for (const child of object.modifiers) {\n  //     const result = find(child, condition);\n  //     if (result) return result;\n  //   }\n  //   return null;\n  // }\n  // // TODO Fix duplicates\n  // console.log('Build up tree');\n  // const tokens = sentenceA.tokens;\n  // const treeIndex = {};\n  // tokens.forEach((token) => {\n  //   treeIndex[token] = find(sentenceA.parse_tree[0], obj => obj.word === token);\n  // });\n  //\n  // console.log(treeIndex);\n  //\n  // function getConjuctions(object) {\n  //   if (!object || !object.modifiers || object.modifiers.length === 0) return [];\n  //\n  //   const [conjunction] = object.modifiers.filter(o => o.arc === 'conj');\n  //   const deeperConjuctions = getConjuctions(conjunction);\n  //\n  //   if (deeperConjuctions.length) {\n  //     return [\n  //       conjunction,\n  //       ...deeperConjuctions,\n  //     ];\n  //   }\n  //   if (conjunction) {\n  //     return [conjunction];\n  //   }\n  //   return [];\n  // }\n  //\n  // const result = {};\n  //\n  // function findIfPropertyIsRequired() {\n  //   // console.log(prop);\n  //   return {\n  //     lessThan: false,\n  //     equal: false,\n  //     moreThan: true,\n  //     quantity: 1,\n  //   };\n  // }\n  //\n  // function findIfPropertyHasMultiple(prop) {\n  //   const determiners = prop.modifiers.filter(o => o.arc === 'det');\n  //   const adjModifiers = prop.modifiers.filter(o => o.arc === 'amod');\n  //   const numModifiers = prop.modifiers.filter(o => o.arc === 'nummod');\n  //\n  //   const combined = determiners.concat(adjModifiers).concat(numModifiers);\n  //   console.log(prop.lemma, ' findupper ', combined);\n  //\n  //   // Find all information related to upper bound\n  //   // const allCardinalityInfo = [];\n  //   // for (const modifier of combined) {\n  //   //   const singleKeywords = ['a', 'single', 'one'];\n  //   //   const multipleKeywords = ['many', 'multiple'];\n  //   //\n  //   //   if (o.arc === 'nummud') {\n  //   //\n  //   //   }\n  //   // }\n  //\n  //   return {\n  //     lessThan: true,\n  //     equal: false,\n  //     moreThan: false,\n  //     quantity: 1,\n  //   };\n  // }\n  //\n  // function categoriseProp(prop) {\n  //   return {\n  //     type: 'string',\n  //     name: prop.lemma,\n  //     lowerBound: findIfPropertyIsRequired(prop),\n  //     upperBound: findIfPropertyHasMultiple(prop),\n  //   };\n  // }\n  //\n  // potentialRelationship.forEach((rel) => {\n  //   // TODO Broaden scope of 'have'\n  //   if (rel.lemma === 'have') {\n  //     const inTree = treeIndex[rel.word];\n  //     console.log(inTree);\n  //\n  //     // Find subject\n  //     const [subject] = inTree.modifiers.filter(o => o.arc === 'nsubj');\n  //     const [object] = inTree.modifiers.filter(o => o.arc === 'dobj');\n  //\n  //     let properties = [];\n  //     if (object) {\n  //       // This is properties\n  //       properties = [object, ...getConjuctions(object)].map(w => w);\n  //     }\n  //     let entities = [];\n  //     if (subject) {\n  //       // This is entities\n  //       entities = [subject, ...getConjuctions(subject)].map(w => w.lemma);\n  //     }\n  //\n  //     const propertiesWithTypes = {};\n  //\n  //     properties.forEach((prop) => {\n  //       propertiesWithTypes[prop.lemma] = categoriseProp(prop);\n  //     });\n  //\n  //     for (const entity of entities) {\n  //       if (result[entity]) {\n  //         result[entity] = result[entity].concat(propertiesWithTypes);\n  //       } else {\n  //         result[entity] = propertiesWithTypes;\n  //       }\n  //     }\n  //   }\n  // });\n  //\n  // console.log('\\n\\n', result, '\\n\\n');\n\n  // check if relationship is containment\n\n\n  // Look through entity types if there are instances involved (Use wordnet hypernyms for this)\n\n  // Find quantities of each relationship from multiple and existance\n\n  // Get facts from information\n\n  // Combine facts\n\n  // Construct structure in the form\n  // {\n  //   entity: {\n  //     attribute: {\n  //       name: string,\n  //       type: string,\n  //       lowerBound: {\n  //         lessThan: boolean,\n  //         equal: boolean,\n  //         moreThan: boolean,\n  //         quantity: 1,\n  //       },\n  //       upperBound: {\n  //         lessThan: boolean,\n  //         equal: boolean,\n  //         moreThan: boolean,\n  //         quantity: 1,\n  //       },\n  //     },\n  //   },\n  // }\n\n  // return Promise.resolve({\n  //   raw: text,\n  // });\n}\n\n\nconst Natural = {\n  _find: find,\n  _findAll: findAll,\n  _findIfPropertyIsRequired: findIfPropertyIsRequired,\n  _findIfPropertyHasMultiple: findIfPropertyHasMultiple,\n  _filterTree: filterTree,\n  seperateSentences,\n  generateModelStructure,\n  parse,\n};\n\nexport default Natural;\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/natural.js","import Natural from '../services/natural';\n\nexport function parseSpreadsheet(spreadsheets) {\n  // Assume spreadsheet is array of csv's\n\n  const allModelDefinitions = [];\n\n  for (const csv of spreadsheets) {\n    let modelDefinition = {};\n    let [headingLine, ...rowLines] = csv.split('\\n');\n    let headings = headingLine.split(',');\n    let rows = rowLines.map(r => r.split(','));\n\n\n    for (let i = 0; i < headings.length; i++) {\n      let name = headings[i];\n\n      let types = new Set(rows.map(row => determineType(row[i])));\n      console.log({name, types});\n    }\n\n    allModelDefinitions.push(modelDefinition);\n  }\n}\n\nfunction mode(array) {\n  if (!array || array.length === 0) return null;\n  return array.reduce(array[0], (prev, value) => {\n    return (value > prev) ? value : prev;\n  });\n}\n\n// Given a array of type information, determines the type which encompases all values\nexport function determineType(information) {\n  let type;\n  let multiple = false;\n  let required = true;\n\n  for (const value of information) {\n    if (value === null || value === undefined) {\n      required = false;\n      continue;\n    }\n\n    if (value.type === 'string') {\n      type = 'string';\n    } else if (value.type === 'float') {\n      if (type !== 'string') {\n        type = 'float';\n      }\n    } else if (value.type === 'integer') {\n      if (type !== 'float' || type !== 'string') {\n        type = 'integer';\n      }\n    }\n\n    if (value.multiple = true) {\n      multiple = true;\n    }\n  }\n\n  return {\n    type,\n    multiple,\n    required,\n  };\n}\n\n// Given a string, finds the most likely type\nexport function findType(string) {\n  // If there is no value assume null\n  if ((string === null) || (string === undefined)) return null;\n\n  let object = safeJSONParse(string);\n  let multiple = Array.isArray(object);\n  let type;\n\n  if (multiple) {\n    type = 'string';\n    type = determineType(object.map(findType)).type;\n    console.log(type);\n    if (type.multiple) {\n      throw new Error('Multidimensional arrays are not supported!');\n    }\n  } else {\n    // Check for floats\n    if (/^\\-?((\\d+\\.\\d*)|(\\d+\\.\\d*))$/.test(string)) {\n      type = 'float';\n    } else if (/^\\-?(\\d+)$/.test(string)) {\n      type = 'integer';\n    } else {\n      type = 'string';\n    }\n  }\n\n  return {\n    type,\n    multiple,\n    example: string,\n  }\n\n}\n\nfunction safeJSONParse(string) {\n  try {\n    return JSON.parse(string);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function parseNaturalLanguage(text) {\n  return Natural.generateModelStructure(text);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/parse.js","module.exports = require(\"bcrypt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcrypt\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"natural\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"natural\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"nlp_compromise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nlp_compromise\"\n// module id = 26\n// module chunks = 0","module.exports = require(\"passport\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport\"\n// module id = 27\n// module chunks = 0","module.exports = require(\"passport-local\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-local\"\n// module id = 28\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 29\n// module chunks = 0","module.exports = require(\"pos\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pos\"\n// module id = 30\n// module chunks = 0","module.exports = require(\"request-promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request-promise\"\n// module id = 31\n// module chunks = 0","module.exports = require(\"sbd\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sbd\"\n// module id = 32\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 33\n// module chunks = 0","module.exports = require(\"validator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"validator\"\n// module id = 34\n// module chunks = 0"],"sourceRoot":""}